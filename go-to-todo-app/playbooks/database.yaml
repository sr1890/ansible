- name: play database
  hosts: db
  become: yes
  tags:
  - db-install
    
  tasks:
  # sudo apt-get install gnupg
  - name: install gnupg
    package:
      name: gnupg
      state: present
  - name: mongodb-key is added 
    apt_key:
      url: https://www.mongodb.org/static/pgp/server-4.2.asc
      state: present
  - name: mongo-db repo is enabled
    apt_repository:
      repo: deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main
      state: present
      filename: mongodb
  - name: install mongodb-org
    package:
      name: mongodb-org
      state: present  
  - name: db is started 
    service:
      name: mongod
      state: started
      enabled: yes

- name: play datbase - configure admin
  hosts: db
  become: yes
  tags:
  - db-config-admin
  tasks:
  - name: admin user
    command: {{ item }}
    loop:
    -  mongo admin --eval 'db.dropUser ("{{ db_admin_user }}")'
    - |
      mongo admin --eval 'db.createUser( { user: "{{ db_admin_user }}", pwd: "{{ db_admin_pass }}", roles: [ { role: "clusterAdmin", db: "admin" }, { role: "userAdminAnyDatabase", db: "admin" } ] } )'
  - name: security is enabled
    blockinfile:
      path: /etc/mongod.conf
      block: |
        security:
        authorization: "disabled"
      state: present
    notify: mongodb is restarted
  handlers:
  - name: mongodb is restarted
    service: 
      name: mongod
      state: restarted  

#1) disable security (/etc/mongod.conf) --> Restart Mongodb
#> security:
#>   authorization: "disabled"

#2) drop admin user if exist
mongo admin --eval 'db.dropUser("superadmin")'
#3) create admin user
mongo admin --eval 'db.createUser( { user: "superadmin", pwd: "MyPass1234", roles: [ { role: "clusterAdmin", db: "admin" }, { role: "userAdminAnyDatabase", db: "admin" } ] } )'
#4) enable security (/etc/mongod.conf) --> Restart Mongodb
#> security:
#>   authorization: "enabled"


# db_admin_user: superuser
# db_admin_pass: PassMy1234
